========================================================================
    控制台应用程序：readMap 项目概述
	读取dxf文件内容 http://www.cnblogs.com/xyb930826/p/4493373.html

	dxf文件格式：
	1.标题段 HEADER
		标题段记录AutoCAD系统的所有标题变量的当前值或当前状态。标题变量记录了AutoCAD系统的当前工作环境，
		如SNAP捕捉当前状态、栅格间距式样、当前图层层名及线型、颜色等。
	2. 表段 TABLES
		表段共包含4个表，每个表又包含可变数目的表项。
		这些表在文件中出现的顺序是线型表（LTYPE）、图层表（LAYER）、字样表（STYLE）、视图表（VIEW）。
		a、线形表（LTYPE）
		b、层表（LYER）
		c、字体表（STYLE）
		d、视图表（VIEW）
		e、用户坐标系统表（UCS）
		f、视窗配置表（VPORT）
		g、标注字体表（DIMSTYLE）
		h、申请符号表（APPID）
	3.块段	BLOCKS
		块段记录了所用块的块名，当前图层层名、块的种类、块的插入基点及组成该块的所有成员。
		块的种类分为图形块、带有属性的块和无名块三种。无名块包括用HATCH命令生成的剖面线和用DIM命令所完成的尺寸标准。 
	4.实体段	ENTITIES
		实体段记录了每个实体的名称、所在图层及其名字、线型、颜色等。
	5.文件结束段 （END OF FILE）
		DXF文件的结束标志。
	
	一个DXF文件由若干个组构成，每个组占两行，第一行为组的代码，第二行为组值。组代码相当于数据类型的代码，它由CAD图形系统所规定，
	而组值为具体的数值，二者结合起来表示一个数据的含义和值。例如，代码10代表一个点的X坐标，占一行，而其第二行4.5425则是点X坐标的具体数值，二者结合表示一点，其X坐标值为4.5425。 

	(1)组代码和组值的类型组代码为一个非负的不超过三位的整数，而组值由组代码的类型决定。例如： 
		代码0～9组值类型为字符型。 
		代码10～59组值类型为实型。 
		代码60～79组值类型为整型。 
		代码999表示解释行。 
	(2)组代码的含义每个组代码均有规定的含义，有些代码含义是固定的，而有些组代码则因应用场合不同而有多个含义，应具体分析。另外，一些代码是备用的，目前版本尚未用到，现将他们的含义举例介绍如下。 
		0：表示一个事物的开始，如一个块、表、图层、实体等。 
		1：字符型数据的值，如TEXT的字符串、文件名、属性值等。 
		2：一个事物的名字，如段、表、块、线型、视图等的名字。 
		3～5：字符型数据的值，如文件名、线型说明等。 
		6：线型名（固定类型）。 
		8：图层名（固定类型）。 

	DXF文件的结构相当复杂，完整读取DXF文件也是一项异常繁琐的工程。在实际应用中，为了提取图形的实体信息，可以省略DXF文件中的许多项，只要获取其中的层表、块段和实体段，就可以完成相应几何图形的描述。

	dxf文件先叙述实体上各个点的坐标，然后叙述实体上有多少个面，每个面由多少个点构成，这样我们
	至少需要两个数组来存储一个实体的信息，一个用于存储点的坐标，一个用于存储点序，我们可以把两
	个数组放到一个结构中
	
	在实际应用中，模型中的实体数目以及实体中点和面的数目都是不定的，为了有效的利用内存，我们选择MFC
	类库中的聚合类CobArray类所创建的对象vertex，sequence来存储和管理实体的点坐标和点序。
	CobArray类是一个用来存放数组类的聚合类，它根据要进来的数组或结构多少自动进行自身大小的告诉设定，
	而且这个类本身具有的成员函数使得我们对它的对象的操作更加的方便快捷。简单易懂

	三维实体模型的模型信息中的一部分信息可以再标题段中读出，通过变量名为$UCSORG的三个变量，可以得到三维实体
	在世界坐标系中自身所定义的用户用户坐标系原点的三维坐标。通过读取$EXTMAX,$EXTMIN可以获知三维实体在世界坐标系
	中的范围，而其他部分信息只能读完了全部的DXF文件后才可以通过计算确定，对于三维实体模型的全部点坐标。点序，可以
	在实体段中按照前面介绍的DXF文件基本结构读出。

	读取流程
		打开DXF文件
		读取一个记录
		HEADER
		TABLES
		ENTITIES
		BLOCKS
		EOF

	图形的大部分信息都存在ENTITIES中，因此读取实体段的内容最为重要。读取实体段的数据首先考虑读取数据的
	存储方式，然后进一步的处理或者存入数据文件中

	各个实体的数据分为两部分：公共数据块和特殊数据块。公共数据块存储每个实体都具有的特征参数，如所在的图层，实体标识，线型名......
	特殊数据块存储每个实体特有的数据，如实体LINE，它里面有两个端点的坐标值，实体CIRCLE中有圆心坐标值和半径值等。

	单个实体的数据处理方法：读取一个实体的数据首先根据祖玛“0”后的实体标识字符串来确定其为哪一种实体，然后根据这个实体的具体情况来
	读取数据


========================================================================

应用程序向导已为您创建了此 readMap 应用程序。

本文件概要介绍组成 readMap 应用程序的每个文件的内容。


readMap.vcxproj
    这是使用应用程序向导生成的 VC++ 项目的主项目文件，其中包含生成该文件的 Visual C++ 的版本信息，以及有关使用应用程序向导选择的平台、配置和项目功能的信息。

readMap.vcxproj.filters
    这是使用“应用程序向导”生成的 VC++ 项目筛选器文件。它包含有关项目文件与筛选器之间的关联信息。在 IDE 中，通过这种关联，在特定节点下以分组形式显示具有相似扩展名的文件。例如，“.cpp”文件与“源文件”筛选器关联。

readMap.cpp
    这是主应用程序源文件。

/////////////////////////////////////////////////////////////////////////////
其他标准文件:

StdAfx.h, StdAfx.cpp
    这些文件用于生成名为 readMap.pch 的预编译头 (PCH) 文件和名为 StdAfx.obj 的预编译类型文件。

/////////////////////////////////////////////////////////////////////////////
其他注释:

应用程序向导使用“TODO:”注释来指示应添加或自定义的源代码部分。

/////////////////////////////////////////////////////////////////////////////
